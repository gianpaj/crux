var searchIndex = new Map(JSON.parse('[\
["crux",{"doc":"","t":"CCCCHCCFGPFNNNNNNNNNNNNNONNNNNNNNNNONNNNNNNNNNNNONNNNNNOONNNNNNNNNNNNNNNOFFFONNNNNNOOONNNNNNNONNNNNNNNNNNNNNNNNNOOOONNNOOOONNNNNNONNNFNNNNNNNNNHNNNNISOOHHHHHHHOHHOHGPFPFNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNONNNOOSHH","n":["args","config","diff","doctor","main","template","workspace","Cli","Commands","Doctor","DoctorArgs","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","command","command","command_for_update","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fix","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","has_subcommand","include_source_code","init","init","init","into","into","into","path","template_dir","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","verbose","Core","Shell","Workspace","authors","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cores","cores","crux_version","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","deserialize","drop","drop","drop","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","name","name","name","repository","serialize","serialize","serialize","shells","source","source","template","try_from","try_from","try_from","try_into","try_into","try_into","type_gen","type_id","type_id","type_id","Line","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","init","into","show","to_string","try_from","try_into","type_id","FileMap","SOURCE_CODE_EXTENSIONS","_marker","alloc","common","compare","difference","doctor","ensure_trailing_newline","intersection","is_source_code","length","missing","read_files","root","validate_path","Context","Core","CoreContext","Shell","ShellContext","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","capacity_hint","capacity_hint","core_dir","core_name","core_name","core_name_dashes","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","init","init","init","into","into","into","new","new","render_field_escaped","render_field_escaped","render_field_inverse","render_field_inverse","render_field_section","render_field_section","render_field_unescaped","render_field_unescaped","render_section","render_section","shell_dir","shell_name","shell_name_dashes","try_from","try_from","try_from","try_into","try_into","try_into","type_gen","type_id","type_id","type_id","workspace","workspace","CONFIG_FILE","read_config","write_config"],"q":[[0,"crux"],[7,"crux::args"],[73,"crux::config"],[133,"crux::diff"],[148,"crux::doctor"],[164,"crux::template"],[226,"crux::workspace"],[229,"anyhow"],[230,"clap_builder::builder::command"],[231,"clap_builder::parser::matches::arg_matches"],[232,"clap_builder"],[233,"core::result"],[234,"clap_builder::util::id"],[235,"core::option"],[236,"core::any"],[237,"serde::de"],[238,"core::fmt"],[239,"core::fmt"],[240,"std::path"],[241,"alloc::string"],[242,"std::path"],[243,"anyhow"],[244,"ramhorns::template"],[245,"ramhorns::encoding"],[246,"ramhorns::template::section"],[247,"ramhorns::traits"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","temporary","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","files in second but not in first","","Trim whitespace from end of line and ensure trailing â€¦","files in both first and second","test if file is source code","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,9,0,6,10,6,10,9,9,6,9,10,6,9,10,6,6,6,6,9,10,6,9,10,6,9,10,10,6,9,10,6,9,10,6,9,10,6,10,9,6,6,9,10,6,9,10,6,6,6,9,10,6,9,10,6,9,10,6,9,10,6,9,10,6,0,0,0,16,16,18,19,16,18,19,16,19,18,16,16,18,19,16,18,19,16,16,18,19,16,18,19,16,18,19,16,18,19,16,18,19,16,18,19,16,18,19,16,16,18,19,16,18,19,19,16,18,19,16,18,19,18,16,18,19,0,23,23,23,23,23,23,23,23,23,0,23,23,23,23,0,0,39,39,0,0,0,0,0,0,0,39,0,0,39,0,0,28,0,28,0,28,32,34,28,32,34,32,34,34,32,34,32,28,32,34,28,32,34,28,32,34,28,32,34,28,32,34,28,32,34,32,34,32,34,32,34,32,34,32,34,32,34,34,34,34,28,32,34,28,32,34,34,28,32,34,32,34,0,0,0],"f":[0,0,0,0,[[],[[2,[1]]]],0,0,0,0,0,0,[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],3],0,[[],3],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,1],[4,1],[4,1],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[5,[[8,[6,7]]]],[5,[[8,[9,7]]]],[5,[[8,[10,7]]]],[5,[[8,[6,7]]]],[5,[[8,[9,7]]]],[5,[[8,[10,7]]]],[[],[[12,[11]]]],[[],[[12,[11]]]],[13,14],0,[[],4],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[[6,5],[[8,[1,7]]]],[[9,5],[[8,[1,7]]]],[[10,5],[[8,[1,7]]]],[[6,5],[[8,[1,7]]]],[[9,5],[[8,[1,7]]]],[[10,5],[[8,[1,7]]]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[],16],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],0,[-1,[[8,[16]]],17],[-1,[[8,[18]]],17],[-1,[[8,[19]]],17],[4,1],[4,1],[4,1],[[16,20],21],[[18,20],21],[[19,20],21],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],4],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[16,-1],8,22],[[18,-1],8,22],[[19,-1],8,22],0,0,0,0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],0,[-1,15,[]],[-1,15,[]],[-1,15,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[4,-1,[]],[4,-1,[]],[4,1],[[23,20],21],[-1,-1,[]],[[],4],[-1,-2,[],[]],[[24,13,13],1],[-1,25,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,15,[]],0,0,0,0,[[[27,[26,25]],[27,[26,25]]],1],[[24,24,28,29,14],[[2,[1,30]]]],[[[27,[26,25]],[27,[26,25]]],[[31,[26]]]],[[24,[12,[24]],29,14],[[2,[1]]]],[13,25],[[[27,[26,25]],[27,[26,25]]],[[31,[26]]]],[24,14],0,[[[27,[26,25]],[27,[26,25]]],1],[[24,24,28,29,14],[[2,[[1,[[27,[26,25]],[27,[26,25]]]]]]]],0,[24,[[2,[1]]]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[32,33],4],[[34,33],4],0,0,0,0,[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,1],[4,1],[4,1],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],4],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[16,18],32],[[16,18,19],34],[[32,35,13,-1],[[8,[14]]],36],[[34,35,13,-1],[[8,[14]]],36],[[32,35,13,[37,[-1]],-2],[[8,[14]]],38,36],[[34,35,13,[37,[-1]],-2],[[8,[14]]],38,36],[[32,35,13,[37,[-1]],-2],[[8,[14]]],38,36],[[34,35,13,[37,[-1]],-2],[[8,[14]]],38,36],[[32,35,13,-1],[[8,[14]]],36],[[34,35,13,-1],[[8,[14]]],36],[[32,[37,[-1]],-2],[[8,[1]]],38,36],[[34,[37,[-1]],-2],[[8,[1]]],38,36],0,0,0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],0,[-1,15,[]],[-1,15,[]],[-1,15,[]],0,0,0,[[],[[2,[16]]]],[16,[[2,[1]]]]],"c":[],"p":[[1,"tuple"],[8,"Result",229],[5,"Command",230],[1,"usize"],[5,"ArgMatches",231],[5,"Cli",7],[8,"Error",232],[6,"Result",233],[6,"Commands",7],[5,"DoctorArgs",7],[5,"Id",234],[6,"Option",235],[1,"str"],[1,"bool"],[5,"TypeId",236],[5,"Workspace",73],[10,"Deserializer",237],[5,"Core",73],[5,"Shell",73],[5,"Formatter",238],[8,"Result",238],[10,"Serializer",239],[5,"Line",133],[5,"Path",240],[5,"String",241],[5,"PathBuf",240],[5,"BTreeMap",242],[6,"Context",164],[1,"u8"],[5,"Error",229],[5,"Vec",243],[5,"CoreContext",164],[5,"Template",244],[5,"ShellContext",164],[1,"u64"],[10,"Encoder",245],[5,"Section",246],[10,"ContentSequence",247],[8,"FileMap",148]],"b":[]}],\
["crux_core",{"doc":"Cross-platform app development in Rust","t":"KREFKRRRFREQNNNNCCCNNNNNNENONCNMNCNNNNNNMMNFFFNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNONNKFRGKRRFKNNNNNNNNNNNNNNNNNNNMNMNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNONONNNNNNNNNNNNNNN","n":["App","Capabilities","Capability","Core","Effect","Event","Ffi","Model","Request","ViewModel","WithContext","assert_effect","borrow","borrow","borrow_mut","borrow_mut","bridge","capability","compose","default","fmt","from","from","into","into","macros","new","operation","process_event","render","resolve","serialize","serialize","testing","try_from","try_from","try_into","try_into","type_id","type_id","update","view","view","Bridge","BridgeWithSerializer","Request","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deserialize","do_erased_serialize","effect","erased_serialize","fmt","from","from","from","handle_response","handle_response","into","into","into","new","new","process_event","process_event","serialize","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","uuid","view","view","Capability","CapabilityContext","MappedSelf","Never","Operation","Operation","Output","ProtoContext","WithContext","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deserialize","do_erased_serialize","eq","erased_serialize","fmt","from","from","from","into","into","into","map_event","map_event","new_with_context","notify_shell","request_from_shell","serialize","spawn","specialize","stream_from_shell","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_app","Compose","ComposeContext","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","from","from","into","into","map_event","new","spawn","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_app","Render","RenderOperation","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","do_erased_serialize","eq","erased_serialize","fmt","from","from","into","into","map_event","new","render","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","AppTester","Update","as_ref","borrow","borrow","borrow_mut","borrow_mut","default","effects","effects","effects_mut","events","fmt","from","from","into","into","into_effects","resolve","try_from","try_from","try_into","try_into","type_id","type_id","update","view"],"q":[[0,"crux_core"],[43,"crux_core::bridge"],[82,"crux_core::capability"],[130,"crux_core::compose"],[153,"crux_core::render"],[184,"crux_core::testing"],[211,"core::fmt"],[212,"core::fmt"],[213,"serde::ser"],[214,"core::ops::function"],[215,"core::result"],[216,"core::any"],[217,"core::marker"],[218,"core::default"],[219,"serde::de"],[220,"serde::de"],[221,"erased_serde::ser"],[222,"serde::ser"],[223,"core::ops::function"],[224,"anyhow"]],"d":["Implement <code>App</code> on your type to make it into a Crux app. Use â€¦","Capabilities, typically a <code>struct</code>, lists the capabilities â€¦","","The Crux core. Create an instance of this type with your â€¦","Implemented automatically with the Effect macro from â€¦","Event, typically an <code>enum</code>, defines the actions that can be â€¦","Ffi is an enum with variants corresponding to the Effect â€¦","Model, typically a <code>struct</code> defines the internal state of â€¦","Request represents an effect request from the core to the â€¦","ViewModel, typically a <code>struct</code> describes the user interface â€¦","","Panics if the pattern doesnâ€™t match an <code>Effect</code> from the â€¦","","","","","","Capabilities provide a user-friendly API to request â€¦","A capability which can spawn tasks which orchestrate â€¦","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create an instance of the Crux core to start a Crux â€¦","","Run the appâ€™s <code>update</code> function with a given <code>event</code>, â€¦","Built-in capability used to notify the Shell that a UI â€¦","Resolve an effect <code>request</code> for operation <code>Op</code> with the â€¦","Converts the <code>Effect</code> into its FFI counterpart and returns â€¦","Serialize this effect request using <code>effect</code> as a constructor","Testing support for unit testing Crux apps.","","","","","","","Update method defines the transition from one <code>model</code> state â€¦","View method is used by the Shell to request the current â€¦","Get the current state of the appâ€™s view model.","Bridge is a core wrapper presenting the same interface as â€¦","A bridge with a user supplied serializer","Request for a side-effect passed from the Core to the â€¦","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Receive a response to a capability request from the shell.","Receive a response to a capability request from the shell.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new Bridge using the provided <code>core</code>.","","Receive an event from the shell.","Receive an event from the shell.","","","","","","","","","","","","Get the current state of the appâ€™s view model â€¦","Get the current state of the appâ€™s view model â€¦","Implement the <code>Capability</code> trait for your capability. This â€¦","An interface for capabilities to interact with the app and â€¦","","A type that can be used as a capability operation, but â€¦","Operation trait links together input and output of a â€¦","","<code>Output</code> assigns the type this request results in.","Initial version of capability Context which has not yet â€¦","Allows Crux to construct appâ€™s set of required â€¦","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Transform the CapabilityContext into one which uses the â€¦","","Send an effect request to the shell in a fire and forget â€¦","Send an effect request to the shell, expecting an output. â€¦","","Spawn a task to do the asynchronous work. Within the task, â€¦","Specialize the CapabilityContext to a specific capability, â€¦","Send an effect request to the shell, expecting a stream of â€¦","","","","","","","","","","","Send an event to the app. The event will be processed on â€¦","Compose capability can be used to orchestrate effects into â€¦","A restricted context given to the closure passed to â€¦","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Spawn a task which orchestrates across other capabilities.","","","","","","","","Update the app with an event. This forwards to â€¦","Use an instance of <code>Render</code> to notify the Shell that it â€¦","The single operation <code>Render</code> implements.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Call <code>render</code> from <code>App::update</code> to signal to the Shell that â€¦","","","","","","","","","","AppTester is a simplified execution environment for Crux â€¦","Update test helper holds the result of running an app â€¦","","","","","","","","Effects requested from the update run","","Events dispatched from the update run","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Resolve an effect <code>request</code> from previous update with an â€¦","","","","","","","Run the appâ€™s <code>update</code> function with an event and a model â€¦","Run the appâ€™s <code>view</code> function with a model state"],"i":[0,3,0,0,0,3,2,3,0,3,0,0,4,1,4,1,0,0,0,1,4,4,1,4,1,0,1,4,1,0,1,2,4,0,4,1,4,1,4,1,3,3,1,0,0,0,29,32,23,29,32,23,23,23,23,23,23,29,32,23,29,32,29,32,23,29,32,29,32,23,29,32,23,29,32,23,29,32,23,23,29,32,0,0,39,0,0,39,7,0,0,34,42,35,34,42,35,34,34,35,35,35,35,35,34,42,35,34,42,35,39,34,54,34,34,35,34,42,34,34,34,42,35,34,42,35,34,42,35,34,0,0,44,45,44,45,44,44,44,45,44,45,44,44,44,44,44,45,44,45,44,45,45,0,0,47,48,47,48,47,48,47,48,48,48,48,48,48,47,48,47,48,47,47,47,48,47,48,47,48,47,48,47,48,0,0,49,49,50,49,50,49,50,50,50,50,50,49,50,49,50,50,49,49,50,49,50,49,50,49,49],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[],[[1,[-1,-2]]],2,3],[[[4,[-1]],5],6,[7,8]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],[[1,[-1,-2]]],2,3],0,[[[1,[-1,-2]]],[[9,[-1]]],2,3],0,[[[1,[-1,-2]],[4,[-3]]],[[9,[-1]]],2,3,7],[[[2,[],[[10,[-1]]]]],[[11,[-1,0]]],12],[[[4,[-1]],-3],[[11,[-2,0]]],7,[],[[14,[-1],[[13,[-2]]]]]],0,[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[[[3,[],[[17,[-1]],[18,[-2]],[19,[-3]],[20,[-4]]]],-1,-2,-4],11,21,22,12,[]],[[[3,[],[[17,[-1]],[18,[-2]],[19,[-3]],[20,[-4]]]],-2],-3,21,22,12,[]],[[[1,[-1,-2]]],[],2,3],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[[23,[-2]]]]],24,[12,25]],[[-1,26],[[15,[11,27]]],[]],0,[[-1,26],[[15,[11,28]]],[]],[[[23,[-1]],5],6,[12,8]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[29,[-1,-2]],[31,[30]],[31,[30]]],[[9,[30]]],[2,21],3],[[[32,[-1,-2]],[31,[30]],-3,-4],11,2,3,24,33],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1,-2]]],[[29,[-1,-2]]],[2,21],3],[[[1,[-1,-2]]],[[32,[-1,-2]]],2,3],[[[29,[-1,-2]],[31,[30]]],[[9,[30]]],[2,21],3],[[[32,[-1,-2]],-3,-4],11,2,3,24,33],[[[23,[-1]],-2],15,[12,12],33],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],0,[[[29,[-1,-2]]],[[9,[30]]],[2,21],3],[[[32,[-1,-2]],-3],11,2,3,33],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[34,[-1,-2]]],[[34,[-1,-2]]],7,[]],[[-1,-2],11,[],[]],[-1,[[15,[35]]],24],[[-1,26],[[15,[11,27]]],[]],[[35,35],36],[[-1,26],[[15,[11,28]]],[]],[[35,5],6],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[39,[],[[37,[-1]],[38,[-2]]]],-5],-2,7,[],21,[],[[14,[-3],[[13,[-4]]]],21,40,41]],[[[34,[-1,-2]],-4],[[34,[-1,-3]]],7,[],[],[[14,[-3],[[13,[-2]]]],40,21]],[[[42,[-1]]],[],[]],[[[34,[-1,-2]],-1],11,7,[]],0,[[35,-1],15,33],[[[34,[-1,-2]],-3],11,7,[],[[43,[],[[13,[11]]]],21]],[[[42,[-1,-2]],-4],[[34,[-3,-2]]],[],[],7,[[14,[[4,[-3]]],[[13,[-1]]]],40,21,41]],0,[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[[[34,[-1,-2]],-2],11,7,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[44,[-1]]],[[44,[-1]]],[]],[[-1,-2],11,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[44,[-1]],-3],-4,[],[],[[14,[-2],[[13,[-1]]]],21,40,41],[]],[[[34,[35,-1]]],[[44,[-1]]],[]],[[[44,[-1]],-3],11,[],[[43,[],[[13,[11]]]],21],[[46,[[45,[-1]]],[[13,[-2]]]]]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[[[45,[-1]],-1],11,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[47,[-1]]],[[47,[-1]]],[]],[48,48],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,[[15,[48]]],24],[[-1,26],[[15,[11,27]]],[]],[[48,48],36],[[-1,26],[[15,[11,28]]],[]],[[48,5],6],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[47,[-1]],-3],-4,[],[],[[14,[-2],[[13,[-1]]]],21,40,41],[]],[[[34,[48,-1]]],[[47,[-1]]],[]],[[[47,[-1]]],11,[]],[[48,-1],15,33],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],0,0,[[[49,[-1,-2]]],[],3,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[49,[-1,-2]]],3,21],[[[50,[-1,-2]]],[[0,[[52,[],[[51,[-1]]]]]]],[],[]],0,[[[50,[-1,-2]]],[[0,[[52,[],[[51,[-1]]]]]]],[],[]],0,[[[50,[-1,-2]],5],6,8,8],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[50,[-1,-2]]],[[0,[[52,[],[[51,[-1]]]]]]],[],[]],[[[49,[-1,-2]],[4,[-3]]],[[53,[[50,[-2]]]]],3,[],7],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[[[49,[-1,-2]]],[[50,[-2]]],3,[]],[[[49,[-1,-2]]],[],3,[]]],"c":[],"p":[[5,"Core",0],[10,"Effect",0],[10,"App",0],[5,"Request",0],[5,"Formatter",211],[8,"Result",211],[10,"Operation",82],[10,"Debug",211],[5,"Vec",212],[17,"Ffi"],[1,"tuple"],[10,"Serialize",213],[17,"Output"],[10,"Fn",214],[6,"Result",215],[5,"TypeId",216],[17,"Event"],[17,"Model"],[17,"ViewModel"],[17,"Capabilities"],[10,"Send",217],[10,"Default",218],[5,"Request",43],[10,"Deserializer",219],[10,"Deserialize",219],[10,"Serializer",220],[6,"ErrorImpl",220],[5,"Error",221],[5,"Bridge",43],[1,"u8"],[1,"slice"],[5,"BridgeWithSerializer",43],[10,"Serializer",213],[5,"CapabilityContext",82],[6,"Never",82],[1,"bool"],[17,"Operation"],[17,"MappedSelf"],[10,"Capability",82],[10,"Sync",217],[10,"Copy",217],[5,"ProtoContext",82],[10,"Future",222],[5,"Compose",130],[5,"ComposeContext",130],[10,"FnOnce",214],[5,"Render",153],[5,"RenderOperation",153],[5,"AppTester",184],[5,"Update",184],[17,"Item"],[10,"Iterator",223],[8,"Result",224],[10,"WithContext",82]],"b":[]}],\
["crux_http",{"doc":"A HTTP client for use with Crux","t":"FPFPGPPPFFFFIPPNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFFNNNNNNNNNNMNNNNNNNNNNNNNNNPFFFGFFGGPPPPPNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNOONNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNFNNNNNNNNNNNNN","n":["Config","Err","Http","Http","HttpError","Io","Json","Ok","Request","RequestBuilder","Response","ResponseAsync","Result","Timeout","Url","add_header","append_header","append_header","append_header","as_mut","as_mut","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_ref","as_ref","base_url","body","body","body_bytes","body_bytes","body_bytes","body_bytes","body_form","body_form","body_json","body_json","body_json","body_json","body_string","body_string","body_string","body_string","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","client","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","connect","content_type","content_type","content_type","content_type","default","delete","deserialize","deserialize","do_erased_serialize","do_erased_serialize","eq","eq","erased_serialize","erased_serialize","expect_json","expect_string","ext","ext","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","get","head","header","header","header","header","header_mut","header_mut","header_mut","header_names","header_names","header_names","header_values","header_values","header_values","headers","http","index","index","index","index","index","index","insert_ext","insert_header","insert_header","insert_header","into","into","into","into","into","into","into","into","into","into_future","into_iter","into_iter","into_iter","is_empty","is_empty","iter","iter","iter","iter_mut","iter_mut","iter_mut","len","len","map_event","method","middleware","middleware","middleware","new","new","new","options","patch","poll_read","post","protocol","put","query","query","remove_header","remove_header","remove_header","request","send","send_async","serialize","serialize","set_base_url","set_body","set_body","set_content_type","set_ext","set_header","set_query","status","status","swap_body","take_body","take_body","take_body","testing","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","trace","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","version","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_body","Client","borrow","borrow_mut","clone","clone_into","config","connect","delete","fmt","from","get","head","into","options","patch","post","put","recv_bytes","recv_form","recv_json","recv_string","request","send","to_owned","trace","try_from","try_into","type_id","vzip","Middleware","Next","Redirect","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","fmt","from","from","handle","handle","into","into","new","new","run","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Err","HttpHeader","HttpRequest","HttpRequestBuilder","HttpRequestBuilderError","HttpResponse","HttpResponseBuilder","HttpResponseBuilderError","HttpResult","Ok","UninitializedField","UninitializedField","ValidationError","ValidationError","body","body","body","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","delete","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","eq","eq","eq","eq","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","get","head","header","header","headers","headers","into","into","into","into","into","into","into","into","json","json","method","method","name","ok","options","patch","post","put","serialize","serialize","serialize","serialize","status","status","status","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","url","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ResponseBuilder","body","borrow","borrow_mut","build","from","header","into","ok","try_from","try_into","type_id","vzip","with_status"],"q":[[0,"crux_http"],[238,"crux_http::client"],[267,"crux_http::middleware"],[296,"crux_http::protocol"],[457,"crux_http::testing"],[471,"http_types_red_badger_temporary_fork::headers::header_name"],[472,"core::convert"],[473,"http_types_red_badger_temporary_fork::headers::to_header_values"],[474,"http_types_red_badger_temporary_fork::headers::headers"],[475,"http_types_red_badger_temporary_fork::request"],[476,"http_types_red_badger_temporary_fork::response"],[477,"http_types_red_badger_temporary_fork::body"],[478,"core::option"],[479,"core::convert"],[480,"serde::ser"],[481,"serde::de"],[482,"alloc::string"],[483,"core::clone"],[484,"http_types_red_badger_temporary_fork::mime"],[485,"core::result"],[486,"serde::de"],[487,"erased_serde::ser"],[488,"erased_serde::error"],[489,"core::marker"],[490,"core::marker"],[491,"core::fmt"],[492,"serde_json::error"],[493,"http_types_red_badger_temporary_fork::error"],[494,"http_types_red_badger_temporary_fork::headers::header_values"],[495,"http_types_red_badger_temporary_fork::headers::names"],[496,"http_types_red_badger_temporary_fork::headers::values"],[497,"http_types_red_badger_temporary_fork::headers::iter"],[498,"http_types_red_badger_temporary_fork::headers::iter_mut"],[499,"core::ops::function"],[500,"core::marker"],[501,"url"],[502,"crux_core::capability"],[503,"core::pin"],[504,"core::task::wake"],[505,"std::io::error"],[506,"core::task::poll"],[507,"core::ops::function"],[508,"serde::ser"],[509,"core::any"],[510,"http_types_red_badger_temporary_fork::version"],[511,"core::future::future"],[512,"alloc::boxed"],[513,"alloc::sync"],[514,"derive_builder::error"]],"d":["Configuration for <code>crux_http::Http</code>s and their underlying â€¦","Contains the error value","The Http capability API.","","","","","Contains the success value","An HTTP request, returns a <code>Response</code>.","Request Builder","An HTTP Response that will be passed to in a message to an â€¦","An HTTP response that exposes async methods. This is to â€¦","","","","Adds a header to be added to every request by this config.","Append a header to the headers.","Append an HTTP header.","Append an HTTP header.","","","","","","","","","","","The base URL for a client. All request URLs will be â€¦","Sets the body of the request from any type with implements â€¦","","Pass bytes as the request body.","Pass bytes as the request body.","Reads the entire request body into a byte buffer.","Reads the entire request body into a byte buffer.","Pass a form as the request body.","Reads and deserialized the entire request body from form â€¦","Pass JSON as the request body.","Pass JSON as the request body.","Reads and deserialized the entire request body from json.","Reads and deserialized the entire request body from json.","Pass a string as the request body.","Pass a string as the request body.","Reads the entire response body into a string.","Reads the entire response body into a string.","","","","","","","","","","","","","","","Return the constructed <code>Request</code>.","","","","","","","","","","","","Instruct the Shell to perform a HTTP CONNECT request to â€¦","Sets the Content-Type header on the request.","Get the request content type as a <code>Mime</code>.","Get the response content type as a <code>Mime</code>.","Get the response content type as a <code>Mime</code>.","","Instruct the Shell to perform a HTTP DELETE request to the â€¦","","","","","","","","","Decode a <code>T</code> from a JSON response body prior to dispatching â€¦","Decode a String from the response body prior to â€¦","Get a request extension value.","Get a response scoped extension value.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Converts an <code>http::Request</code> to a <code>crux_http::Request</code>.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Instruct the Shell to perform a HTTP GET request to the â€¦","Instruct the Shell to perform a HTTP HEAD request to the â€¦","Sets a header on the request.","Get an HTTP header.","Get a header.","Get a header.","Get a mutable reference to a header.","Get an HTTP header mutably.","Get an HTTP header mutably.","An iterator visiting all header names in arbitrary order.","An iterator visiting all header names in arbitrary order.","An iterator visiting all header names in arbitrary order.","An iterator visiting all header values in arbitrary order.","An iterator visiting all header values in arbitrary order.","An iterator visiting all header values in arbitrary order.","Headers to be applied to every request made by this client.","","Returns a reference to the value corresponding to the â€¦","Returns a reference to the value corresponding to the â€¦","Returns a reference to the value corresponding to the â€¦","Returns a reference to the value corresponding to the â€¦","Returns a reference to the value corresponding to the â€¦","Returns a reference to the value corresponding to the â€¦","Set a response scoped extension value.","Set an HTTP header.","Insert an HTTP header.","Insert an HTTP header.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts a <code>crux_http::Request</code> to an <code>http::Request</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Sends the constructed <code>Request</code> and returns a future that â€¦","Returns a iterator of references over the remaining items.","","","Returns <code>true</code> if the set length of the body stream is zero, â€¦","Returns <code>true</code> if the set length of the body stream is zero, â€¦","An iterator visiting all header pairs in arbitrary order.","An iterator visiting all header pairs in arbitrary order.","An iterator visiting all header pairs in arbitrary order.","An iterator visiting all header pairs in arbitrary order, â€¦","An iterator visiting all header pairs in arbitrary order, â€¦","An iterator visiting all header pairs in arbitrary order, â€¦","Get the length of the body stream, if it has been set.","Get the length of the body stream, if it has been set.","","Get the request HTTP method.","Middleware types","Push middleware onto a per-request middleware stack.","Push middleware onto a per-request middleware stack.","Construct new empty config.","Create a new instance.","","Instruct the Shell to perform a HTTP OPTIONS request to â€¦","Instruct the Shell to perform a HTTP PATCH request to the â€¦","","Instruct the Shell to perform a HTTP POST request to the â€¦","The protocol for communicating with the shell","Instruct the Shell to perform a HTTP PUT request to the â€¦","Set the URL querystring.","Get the URL querystring.","Remove a header.","Remove a header.","Remove a header.","Instruct the Shell to perform an HTTP request with the â€¦","Sends the constructed <code>Request</code> and returns its result as an â€¦","Sends the constructed <code>Request</code> and returns a future that â€¦","","","Sets the base URL for this config. All request URLs will â€¦","Pass an <code>AsyncRead</code> stream as the request body.","Set the body reader.","Set the request content type from a <code>Mime</code>.","Set a request extension value.","Set an HTTP header.","Set the URL querystring.","Get the HTTP status code.","Get the HTTP status code.","Swaps the value of the body with another body, without â€¦","Take the request body as a <code>Body</code>.","","Take the response body as a <code>Body</code>.","","","","","","","","Instruct the Shell to perform a HTTP TRACE request to the â€¦","","","","","","","","","","","","","","","","","","","","","","Get the request url.","Get the HTTP protocol version.","Get the HTTP protocol version.","","","","","","","","","An HTTP client, capable of sending <code>Request</code>s","","","Clones the Client.","","Get the current configuration.","Perform an HTTP <code>CONNECT</code> request using the <code>Client</code> â€¦","Perform an HTTP <code>DELETE</code> request using the <code>Client</code> connection.","","Returns the argument unchanged.","Perform an HTTP <code>GET</code> request using the <code>Client</code> connection.","Perform an HTTP <code>HEAD</code> request using the <code>Client</code> connection.","Calls <code>U::from(self)</code>.","Perform an HTTP <code>OPTIONS</code> request using the <code>Client</code> â€¦","Perform an HTTP <code>PATCH</code> request using the <code>Client</code> connection.","Perform an HTTP <code>POST</code> request using the <code>Client</code> connection.","Perform an HTTP <code>PUT</code> request using the <code>Client</code> connection.","Submit a <code>Request</code> and get the response body as bytes.","Submit a <code>Request</code> and decode the response body from form â€¦","Submit a <code>Request</code> and decode the response body from json â€¦","Submit a <code>Request</code> and get the response body as a string.","Perform a HTTP request with the given verb using the <code>Client</code>â€¦","Send a <code>Request</code> using this client.","","Perform an HTTP <code>TRACE</code> request using the <code>Client</code> connection.","","","","","Middleware that wraps around remaining middleware chain.","The remainder of a middleware chain, including the â€¦","A middleware which attempts to follow HTTP redirects.","","","","","","","Create a new instance of the Redirect middleware, which â€¦","","Returns the argument unchanged.","Returns the argument unchanged.","Asynchronously handle the request, and return a response.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new instance","Create a new instance of the Redirect middleware, which â€¦","Asynchronously execute the remaining middleware chain.","","","","","","","","","","","","","Builder for <code>HttpRequest</code>.","Error type for HttpRequestBuilder","","Builder for <code>HttpResponse</code>.","Error type for HttpResponseBuilder","","","Uninitialized field","Uninitialized field","Custom validation error","Custom validation error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Allows users to build an http response.","Sets the body of the Response","","","Builds the response","Returns the argument unchanged.","Sets a header on the response.","Calls <code>U::from(self)</code>.","Constructs a new ResponseBuilder with the 200 OK status â€¦","","","","","Constructs a new ResponseBuilder with the specified status â€¦"],"i":[0,2,0,23,0,23,23,2,0,0,0,0,0,23,23,1,6,8,9,6,6,8,9,9,6,6,8,9,9,1,13,8,13,6,8,9,6,9,13,6,8,9,13,6,8,9,13,1,23,6,8,9,25,13,1,23,6,8,9,25,13,0,1,23,6,8,25,1,23,6,8,25,25,13,6,8,9,1,25,23,8,23,8,23,8,23,8,13,13,6,9,13,1,23,23,6,8,9,13,1,23,23,23,23,6,6,8,9,9,9,25,25,25,13,6,8,9,6,8,9,6,8,9,6,8,9,1,0,6,6,8,8,9,9,9,6,8,9,13,1,23,6,6,8,9,9,25,13,6,6,6,6,9,6,8,9,6,8,9,6,9,25,6,0,13,6,1,6,25,25,25,9,25,0,25,13,6,6,8,9,25,13,13,23,8,1,6,9,6,6,6,6,8,9,9,6,8,9,0,1,23,6,8,25,23,25,13,1,23,6,8,9,25,13,1,23,6,8,9,25,13,1,23,6,8,9,25,6,8,9,13,1,23,6,8,9,25,8,0,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,0,0,0,69,70,69,70,69,69,70,70,69,70,54,70,69,70,69,70,69,69,69,70,69,70,69,70,69,70,77,0,0,0,0,0,0,0,0,77,78,79,78,79,74,75,56,43,76,74,78,56,75,79,43,77,76,74,78,56,75,79,43,77,74,75,76,74,56,75,43,77,76,74,56,75,43,77,56,43,56,76,56,43,77,76,56,43,77,76,56,43,77,76,56,43,77,76,78,78,56,79,79,43,77,76,74,78,78,78,56,75,79,79,79,43,77,56,56,74,75,56,43,76,74,78,56,75,79,43,77,74,75,74,56,76,43,56,56,56,56,76,56,43,77,75,43,43,76,74,56,75,43,77,78,79,76,74,78,56,75,79,43,77,76,74,78,56,75,79,43,77,76,74,78,56,75,79,43,77,74,56,76,76,74,78,56,75,79,43,77,0,82,82,82,82,82,82,82,82,82,82,82,82,82],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,-1,-2],[[2,[1]]],[[4,[3]]],5],[[6,-1,-2],7,[[4,[3]]],5],[[[8,[-1]],-2,-3],7,[],[[4,[3]]],5],[[9,-1,-2],7,[[4,[3]]],5],[6,10],[6,11],[[[8,[-1]]],10,[]],[9,10],[9,12],[6,11],[6,10],[[[8,[-1]]],10,[]],[9,10],[9,12],0,[[[13,[-1,-2]],-3],[[13,[-1,-2]]],[],[],[[4,[14]]]],[[[8,[-1]]],[[15,[-1]]],[]],[[[13,[-1,-2]],-3],[[13,[-1,-2]]],[],[],[[18,[[17,[16]]]]]],[[6,-1],7,[[18,[[17,[16]]]]]],[[[8,[[19,[16]]]]],[[2,[[19,[16]]]]]],[9,[[2,[[19,[16]]]]]],[[6,-1],[[2,[7]]],20],[9,[[2,[-1]]],21],[[[13,[-1,-2]],-3],[[2,[[13,[-1,-2]]]]],[],[],20],[[6,-1],[[2,[7]]],20],[[[8,[[19,[16]]]]],[[2,[-1]]],21],[9,[[2,[-1]]],21],[[[13,[-1,-2]],22],[[13,[-1,-2]]],[],[]],[[6,22],7],[[[8,[[19,[16]]]]],[[2,[22]]]],[9,[[2,[22]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[13,[-1,-2]]],6,[],[]],0,[1,1],[23,23],[6,6],[[[8,[-1]]],[[8,[-1]]],24],[[[25,[-1]]],[[25,[-1]]],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[[25,[-1]],-2],[[13,[-1]]],[],[[18,[26]]]],[[[13,[-1,-2]],-3],[[13,[-1,-2]]],[],[],[[4,[27]]]],[6,[[15,[27]]]],[[[8,[-1]]],[[15,[27]]],[]],[9,[[15,[27]]]],[[],1],[[[25,[-1]],-2],[[13,[-1]]],[],[[18,[26]]]],[-1,[[28,[23]]],29],[-1,[[28,[[8,[-2]]]]],29,30],[[-1,31],[[28,[7,32]]],[]],[[-1,31],[[28,[7,32]]],[]],[[23,23],33],[[[8,[-1]],[8,[-1]]],33,34],[[-1,31],[[28,[7,35]]],[]],[[-1,31],[[28,[7,35]]],[]],[[[13,[-1,-2]]],[[13,[-1,-3]]],[],[],21],[[[13,[-1,-2]]],[[13,[-1,22]]],[],[]],[6,[[15,[-1]]],[36,37]],[9,[[15,[-1]]],[36,37]],[[[13,[-1]],38],39,[]],[[1,38],39],[[23,38],39],[[23,38],39],[[6,38],39],[[[8,[-1]],38],39,[]],[[9,38],39],[-1,-1,[]],[-1,-1,[]],[40,23],[41,23],[42,23],[-1,-1,[]],[11,6],[-1,-1,[]],[-1,-1,[]],[12,9],[43,9],[-1,-1,[]],[-1,-1,[]],[[[25,[-1]],-2],[[13,[-1]]],[],[[18,[26]]]],[[[25,[-1]],-2],[[13,[-1]]],[],[[18,[26]]]],[[[13,[-1,-2]],-3,-4],[[13,[-1,-2]]],[],[],[[4,[3]]],5],[[6,-1],[[15,[44]]],[[4,[3]]]],[[[8,[-1]],-2],[[15,[44]]],[],[[4,[3]]]],[[9,-1],[[15,[44]]],[[4,[3]]]],[[6,-1],[[15,[44]]],[[4,[3]]]],[[[8,[-1]],-2],[[15,[44]]],[],[[4,[3]]]],[[9,-1],[[15,[44]]],[[4,[3]]]],[6,45],[[[8,[-1]]],45,[]],[9,45],[6,46],[[[8,[-1]]],46,[]],[9,46],0,0,[[6,3],44],[[6,26],44],[[[8,[-1]],26],44,[]],[[[8,[-1]],3],44,[]],[[9,26],44],[[9,3],44],[[9,-1],7,[36,37]],[[6,-1,-2],[[15,[44]]],[[4,[3]]],5],[[[8,[-1]],-2,-3],7,[],[[4,[3]]],5],[[9,-1,-2],7,[[4,[3]]],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,11],[-1,-2,[],[]],[-1,-2,[],[]],[9,12],[-1,-2,[],[]],[-1,-2,[],[]],[[[13,[-1,-2]]],-3,[],[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,[[15,[33]]]],[9,[[15,[33]]]],[6,47],[[[8,[-1]]],47,[]],[9,47],[6,48],[[[8,[-1]]],48,[]],[9,48],[6,[[15,[49]]]],[9,[[15,[49]]]],[[[25,[-1]],-3],-4,[],[],[[51,[-2],[[50,[-1]]]],36,37,52],[]],[6,53],0,[[[13,[-1,-2]],-3],[[13,[-1,-2]]],[],[],54],[[6,-1],7,54],[[],1],[[53,55],6],[[[57,[56,-1]]],[[25,[-1]]],[]],[[[25,[-1]],-2],[[13,[-1]]],[],[[18,[26]]]],[[[25,[-1]],-2],[[13,[-1]]],[],[[18,[26]]]],[[[58,[9]],59,[17,[16]]],[[61,[[28,[49,60]]]]]],[[[25,[-1]],-2],[[13,[-1]]],[],[[18,[26]]]],0,[[[25,[-1]],-2],[[13,[-1]]],[],[[18,[26]]]],[[[13,[-1,-2]],-3],[[28,[[13,[-1,-2]],23]]],[],[],20],[6,[[2,[-1]]],21],[[6,-1],[[15,[44]]],[[4,[3]]]],[[[8,[-1]],-2],[[15,[44]]],[],[[4,[3]]]],[[9,-1],[[15,[44]]],[[4,[3]]]],[[[25,[-1]],53,55],[[13,[-1]]],[]],[[[13,[-1,-2]],-3],7,[],[],[[62,[[2,[[8,[-2]]]]],[[50,[-1]]]],36]],[[[13,[-1,-2]]],[[63,[[2,[9]]]]],[],[]],[[23,-1],28,64],[[[8,[-1]],-2],28,20,64],[[1,55],1],[[6,-1],7,[[4,[14]]]],[[9,-1],7,[[4,[14]]]],[[6,27],7],[[6,-1],[[15,[-1]]],[36,37]],[[6,-1,-2],7,[[4,[3]]],5],[[6,-1],[[2,[7]]],20],[[[8,[-1]]],65,[]],[9,65],[[9,14],7],[6,14],[[[8,[-1]]],[[15,[-1]]],[]],[9,14],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,22,[]],[[[25,[-1]],-2],[[13,[-1]]],[],[[18,[26]]]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[6,55],[[[8,[-1]]],[[15,[67]]],[]],[9,[[15,[67]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[8,[-1]],-2],[[8,[-2]]],[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[68,68],[[-1,-2],7,[],[]],[68,1],[[68,-1],[[13,[7]]],[[18,[26]]]],[[68,-1],[[13,[7]]],[[18,[26]]]],[[68,38],39],[-1,-1,[]],[[68,-1],[[13,[7]]],[[18,[26]]]],[[68,-1],[[13,[7]]],[[18,[26]]]],[-1,-2,[],[]],[[68,-1],[[13,[7]]],[[18,[26]]]],[[68,-1],[[13,[7]]],[[18,[26]]]],[[68,-1],[[13,[7]]],[[18,[26]]]],[[68,-1],[[13,[7]]],[[18,[26]]]],[[68,-1],[[2,[[19,[16]]]]],[[4,[6]]]],[[68,-1],[[2,[-2]]],[[4,[6]]],21],[[68,-1],[[2,[-2]]],[[4,[6]]],21],[[68,-1],[[2,[22]]],[[4,[6]]]],[[68,53,-1],[[13,[7]]],[[18,[26]]]],[[68,-1],[[2,[9]]],[[4,[6]]]],[-1,-2,[],[]],[[68,-1],[[13,[7]]],[[18,[26]]]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[69,69],[[-1,-2],7,[],[]],[[],70],[[70,38],39],[-1,-1,[]],[-1,-1,[]],[[54,6,68,69],[[58,[[72,[71]]]]]],[[70,6,68,69],[[58,[[72,[71]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[[17,[[73,[54]]]],51],69],[16,70],[[69,6,68],[[63,[[2,[9]]]]]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[74,-1],74,[[4,[[19,[16]]]]]],[[75,-1],75,[[4,[[19,[16]]]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[74,56],[75,43],[76,76],[74,74],[56,56],[75,75],[43,43],[77,77],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[],56],[[],43],[-1,74,[[4,[22]]]],[-1,[[28,[76]]],29],[-1,[[28,[56]]],29],[-1,[[28,[43]]],29],[-1,[[28,[77]]],29],[[-1,31],[[28,[7,32]]],[]],[[-1,31],[[28,[7,32]]],[]],[[-1,31],[[28,[7,32]]],[]],[[-1,31],[[28,[7,32]]],[]],[[76,76],33],[[56,56],33],[[43,43],33],[[77,77],33],[[-1,31],[[28,[7,35]]],[]],[[-1,31],[[28,[7,35]]],[]],[[-1,31],[[28,[7,35]]],[]],[[-1,31],[[28,[7,35]]],[]],[[76,38],39],[[78,38],39],[[78,38],39],[[56,38],39],[[79,38],39],[[79,38],39],[[43,38],39],[[77,38],39],[-1,-1,[]],[-1,-1,[]],[80,78],[22,78],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[22,79],[80,79],[-1,-1,[]],[-1,-1,[]],[-1,74,[[4,[22]]]],[-1,74,[[4,[22]]]],[[74,-1,-2],74,[[4,[22]]],[[4,[22]]]],[[75,-1,-2],75,[[4,[22]]],[[4,[22]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[74,-1],74,20],[[75,-1],75,20],[[74,-1],74,[[4,[22]]]],0,0,[[],75],[-1,74,[[4,[22]]]],[-1,74,[[4,[22]]]],[-1,74,[[4,[22]]]],[-1,74,[[4,[22]]]],[[76,-1],28,64],[[56,-1],28,64],[[43,-1],28,64],[[77,-1],28,64],[[75,-1],75,[[4,[81]]]],[81,75],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,22,[]],[-1,22,[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[[74,-1],74,[[4,[22]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[82,[-1]],-2],[[82,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[82,[-1]]],[[8,[-1]]],[]],[-1,-1,[]],[[[82,[-1]],-2,-3],[[82,[-1]]],[],[[4,[3]]],5],[-1,-2,[],[]],[[],[[82,[[19,[16]]]]]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,-2,[],[]],[65,[[82,[[19,[16]]]]]]],"c":[],"p":[[5,"Config",0],[8,"Result",0],[5,"HeaderName",471],[10,"Into",472],[10,"ToHeaderValues",473],[5,"Request",0],[1,"tuple"],[5,"Response",0],[5,"ResponseAsync",0],[5,"Headers",474],[5,"Request",475],[5,"Response",476],[5,"RequestBuilder",0],[5,"Body",477],[6,"Option",478],[1,"u8"],[1,"slice"],[10,"AsRef",472],[5,"Vec",479],[10,"Serialize",480],[10,"DeserializeOwned",481],[5,"String",482],[6,"HttpError",0],[10,"Clone",483],[5,"Http",0],[1,"str"],[5,"Mime",484],[6,"Result",485],[10,"Deserializer",481],[10,"Deserialize",481],[10,"Serializer",486],[6,"ErrorImpl",486],[1,"bool"],[10,"PartialEq",487],[5,"Error",488],[10,"Send",489],[10,"Sync",489],[5,"Formatter",490],[8,"Result",490],[6,"ParseError",491],[5,"Error",492],[5,"Error",493],[5,"HttpResponse",296],[5,"HeaderValues",494],[5,"Names",495],[5,"Values",496],[5,"Iter",497],[5,"IterMut",498],[1,"usize"],[17,"Output"],[10,"Fn",499],[10,"Copy",489],[6,"Method",500],[10,"Middleware",267],[5,"Url",501],[5,"HttpRequest",296],[5,"CapabilityContext",502],[5,"Pin",503],[5,"Context",504],[5,"Error",505],[6,"Poll",506],[10,"FnOnce",499],[8,"BoxFuture",507],[10,"Serializer",480],[6,"StatusCode",508],[5,"TypeId",509],[6,"Version",510],[5,"Client",238],[5,"Next",267],[5,"Redirect",267],[10,"Future",511],[5,"Box",512],[5,"Arc",513],[5,"HttpRequestBuilder",296],[5,"HttpResponseBuilder",296],[5,"HttpHeader",296],[6,"HttpResult",296],[6,"HttpRequestBuilderError",296],[6,"HttpResponseBuilderError",296],[5,"UninitializedFieldError",514],[1,"u16"],[5,"ResponseBuilder",457]],"b":[[19,"impl-AsMut%3CHeaders%3E-for-Request"],[20,"impl-AsMut%3CRequest%3E-for-Request"],[22,"impl-AsMut%3CHeaders%3E-for-ResponseAsync"],[23,"impl-AsMut%3CResponse%3E-for-ResponseAsync"],[24,"impl-AsRef%3CRequest%3E-for-Request"],[25,"impl-AsRef%3CHeaders%3E-for-Request"],[27,"impl-AsRef%3CHeaders%3E-for-ResponseAsync"],[28,"impl-AsRef%3CResponse%3E-for-ResponseAsync"],[93,"impl-Display-for-HttpError"],[94,"impl-Debug-for-HttpError"],[100,"impl-From%3CParseError%3E-for-HttpError"],[101,"impl-From%3CError%3E-for-HttpError"],[102,"impl-From%3CError%3E-for-HttpError"],[107,"impl-From%3CResponse%3E-for-ResponseAsync"],[108,"impl-From%3CHttpResponse%3E-for-ResponseAsync"],[128,"impl-Index%3CHeaderName%3E-for-Request"],[129,"impl-Index%3C%26str%3E-for-Request"],[130,"impl-Index%3C%26str%3E-for-Response%3CBody%3E"],[131,"impl-Index%3CHeaderName%3E-for-Response%3CBody%3E"],[132,"impl-Index%3C%26str%3E-for-ResponseAsync"],[133,"impl-Index%3CHeaderName%3E-for-ResponseAsync"],[148,"impl-IntoIterator-for-Request"],[149,"impl-IntoIterator-for-%26Request"],[150,"impl-IntoIterator-for-%26mut+Request"],[364,"impl-Display-for-HttpRequestBuilderError"],[365,"impl-Debug-for-HttpRequestBuilderError"],[367,"impl-Display-for-HttpResponseBuilderError"],[368,"impl-Debug-for-HttpResponseBuilderError"],[373,"impl-From%3CUninitializedFieldError%3E-for-HttpRequestBuilderError"],[374,"impl-From%3CString%3E-for-HttpRequestBuilderError"],[379,"impl-From%3CString%3E-for-HttpResponseBuilderError"],[380,"impl-From%3CUninitializedFieldError%3E-for-HttpResponseBuilderError"]]}],\
["crux_kv",{"doc":"A basic Key-Value store for use with Crux","t":"FGGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["KeyValue","KeyValueOperation","KeyValueOutput","Read","Read","Write","Write","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deserialize","deserialize","do_erased_serialize","do_erased_serialize","eq","eq","erased_serialize","erased_serialize","fmt","fmt","from","from","from","into","into","into","map_event","new","read","read_async","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write","write_async"],"q":[[0,"crux_kv"],[55,"core::result"],[56,"serde::de"],[57,"erased_serde::ser"],[58,"erased_serde::ser"],[59,"core::fmt"],[60,"core::fmt"],[61,"core::marker"],[62,"core::marker"],[63,"serde::ser"],[64,"core::any"],[65,"alloc::vec"]],"d":["","Supported operations","","Read bytes stored under a key","","Write bytes under a key","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Read a value under <code>key</code>, will dispatch the event with a â€¦","Read a value under <code>key</code>, while in an async context. This is â€¦","","","","","","","","","","","","","","","Set <code>key</code> to be the provided <code>value</code>. Typically the bytes â€¦","Set <code>key</code> to be the provided <code>value</code>, while in an async â€¦"],"i":[0,0,0,1,2,1,2,1,2,3,1,2,3,1,2,3,1,2,3,1,2,1,2,1,2,1,2,1,2,1,2,3,1,2,3,3,3,3,3,1,2,1,2,3,1,2,3,1,2,3,1,2,3,3,3],"f":[0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,2],[[[3,[-1]]],[[3,[-1]]],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[-1,[[5,[1]]],6],[-1,[[5,[2]]],6],[[-1,7],[[5,[4,8]]],[]],[[-1,7],[[5,[4,8]]],[]],[[1,1],9],[[2,2],9],[[-1,7],[[5,[4,10]]],[]],[[-1,7],[[5,[4,10]]],[]],[[1,11],12],[[2,11],12],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[-1]],-3],-4,[],[],[[14,[-2],[[13,[-1]]]],15,16,17],[]],[[[18,[1,-1]]],[[3,[-1]]],[]],[[[3,[-1]],19,-2],4,[],[[14,[2],[[13,[-1]]]],15,16]],[[[3,[-1]],19],2,[]],[[1,-1],5,20],[[2,-1],5,20],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[[[3,[-1]],19,[23,[22]],-2],4,[],[[14,[2],[[13,[-1]]]],15,16]],[[[3,[-1]],19,[23,[22]]],2,[]]],"c":[],"p":[[6,"KeyValueOperation",0],[6,"KeyValueOutput",0],[5,"KeyValue",0],[1,"tuple"],[6,"Result",55],[10,"Deserializer",56],[10,"Serializer",57],[6,"ErrorImpl",57],[1,"bool"],[5,"Error",58],[5,"Formatter",59],[8,"Result",59],[17,"Output"],[10,"Fn",60],[10,"Send",61],[10,"Sync",61],[10,"Copy",61],[5,"CapabilityContext",62],[1,"str"],[10,"Serializer",63],[5,"TypeId",64],[1,"u8"],[5,"Vec",65]],"b":[]}],\
["crux_macros",{"doc":"","t":"YYY","n":["Capability","Effect","Export"],"q":[[0,"crux_macros"]],"d":["","Procedural macro to derive an Effect enum, with a variant â€¦",""],"i":[0,0,0],"f":[0,0,0],"c":[],"p":[],"b":[]}],\
["crux_platform",{"doc":"TODO mod docs","t":"FFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Platform","PlatformRequest","PlatformResponse","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deserialize","deserialize","do_erased_serialize","do_erased_serialize","eq","eq","erased_serialize","erased_serialize","fmt","fmt","from","from","from","get","into","into","into","map_event","new","serialize","serialize","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"crux_platform"],[42,"core::result"],[43,"serde::de"],[44,"erased_serde::ser"],[45,"erased_serde::ser"],[46,"core::fmt"],[47,"core::fmt"],[48,"core::marker"],[49,"core::marker"],[50,"serde::ser"],[51,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","",""],"i":[0,0,0,1,5,12,1,5,12,1,1,1,5,1,5,1,5,1,5,1,5,1,5,12,12,1,5,12,12,12,1,5,1,1,5,12,1,5,12,1,5,12],"f":[0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],2,[],[]],[-1,[[3,[1]]],4],[-1,[[3,[5]]],4],[[-1,6],[[3,[2,7]]],[]],[[-1,6],[[3,[2,7]]],[]],[[1,1],8],[[5,5],8],[[-1,6],[[3,[2,9]]],[]],[[-1,6],[[3,[2,9]]],[]],[[1,10],11],[[5,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[12,[-1]],-2],2,[],[[14,[5],[[13,[-1]]]],15,16]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[12,[-1]],-3],-4,[],[],[[14,[-2],[[13,[-1]]]],15,16,17],[]],[[[18,[1,-1]]],[[12,[-1]]],[]],[[1,-1],3,19],[[5,-1],3,19],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]]],"c":[],"p":[[5,"PlatformRequest",0],[1,"tuple"],[6,"Result",42],[10,"Deserializer",43],[5,"PlatformResponse",0],[10,"Serializer",44],[6,"ErrorImpl",44],[1,"bool"],[5,"Error",45],[5,"Formatter",46],[8,"Result",46],[5,"Platform",0],[17,"Output"],[10,"Fn",47],[10,"Send",48],[10,"Sync",48],[10,"Copy",48],[5,"CapabilityContext",49],[10,"Serializer",50],[5,"TypeId",51]],"b":[]}],\
["crux_time",{"doc":"Current time access for Crux apps","t":"FFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Time","TimeRequest","TimeResponse","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","do_erased_serialize","do_erased_serialize","eq","eq","erased_serialize","erased_serialize","fmt","fmt","from","from","from","into","into","into","map_event","new","now","now_async","serialize","serialize","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"crux_time"],[46,"core::result"],[47,"serde::de"],[48,"erased_serde::ser"],[49,"erased_serde::ser"],[50,"core::fmt"],[51,"core::fmt"],[52,"core::marker"],[53,"core::marker"],[54,"chrono::offset::utc"],[55,"chrono::datetime"],[56,"serde::ser"],[57,"core::any"]],"d":["The Time capability API. Uses the <code>chrono</code> crateâ€™s â€¦","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Request current time, which will be passed to the app as â€¦","Request current time, which will be returned as â€¦","","","","","","","","","","","","",""],"i":[0,0,0,1,6,2,1,6,2,1,2,1,2,1,6,1,6,1,6,1,6,1,6,1,6,2,1,6,2,2,2,2,2,1,6,1,2,1,6,2,1,6,2,1,6,2],"f":[0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[[2,[-1]]],[[2,[-1]]],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[-1,[[4,[1]]],5],[-1,[[4,[6]]],5],[[-1,7],[[4,[3,8]]],[]],[[-1,7],[[4,[3,8]]],[]],[[1,1],9],[[6,6],9],[[-1,7],[[4,[3,10]]],[]],[[-1,7],[[4,[3,10]]],[]],[[1,11],12],[[6,11],12],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[2,[-1]],-3],-4,[],[],[[14,[-2],[[13,[-1]]]],15,16,17],[]],[[[18,[1,-1]]],[[2,[-1]]],[]],[[[2,[-1]],-2],3,[],[[14,[[20,[19]]],[[13,[-1]]]],15,16]],[[[2,[-1]]],[[20,[19]]],[]],[[1,-1],4,21],[[6,-1],4,21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]]],"c":[],"p":[[5,"TimeRequest",0],[5,"Time",0],[1,"tuple"],[6,"Result",46],[10,"Deserializer",47],[5,"TimeResponse",0],[10,"Serializer",48],[6,"ErrorImpl",48],[1,"bool"],[5,"Error",49],[5,"Formatter",50],[8,"Result",50],[17,"Output"],[10,"Fn",51],[10,"Send",52],[10,"Sync",52],[10,"Copy",52],[5,"CapabilityContext",53],[5,"Utc",54],[5,"DateTime",55],[10,"Serializer",56],[5,"TypeId",57]],"b":[]}],\
["doctest_support",{"doc":"This is support code for doc tests","t":"CCCCFFNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["compose","capabilities","capability_one","capability_two","CapabilityOne","OpOne","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deserialize","do_erased_serialize","eq","erased_serialize","fmt","from","from","into","into","map_event","new","one","one_async","serialize","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","CapabilityTwo","OpTwo","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deserialize","do_erased_serialize","eq","erased_serialize","fmt","from","from","into","into","map_event","new","serialize","to_owned","try_from","try_from","try_into","try_into","two","two_async","type_id","type_id"],"q":[[0,"doctest_support"],[1,"doctest_support::compose"],[2,"doctest_support::compose::capabilities"],[4,"doctest_support::compose::capabilities::capability_one"],[33,"doctest_support::compose::capabilities::capability_two"],[62,"core::result"],[63,"serde::de"],[64,"erased_serde::ser"],[65,"erased_serde::ser"],[66,"core::fmt"],[67,"core::fmt"],[68,"core::marker"],[69,"core::marker"],[70,"serde::ser"],[71,"core::any"]],"d":["","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,1,3,1,3,1,1,3,3,3,3,3,1,3,1,3,1,1,1,1,3,1,1,3,1,3,1,3,0,0,21,22,21,22,21,21,22,22,22,22,22,21,22,21,22,21,21,22,21,21,22,21,22,21,21,21,22],"f":[0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],[[1,[-1]]],[]],[[-1,-2],2,[],[]],[-1,[[4,[3]]],5],[[-1,6],[[4,[2,7]]],[]],[[3,3],8],[[-1,6],[[4,[2,9]]],[]],[[3,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]],-3],-4,[],[],[[13,[-2],[[12,[-1]]]],14,15,16],[]],[[[17,[3,-1]]],[[1,[-1]]],[]],[[[1,[-1]],18,-2],2,[],[[13,[18],[[12,[-1]]]],14]],[[[1,[-1]],18],18,[]],[[3,-1],4,19],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[21,[-1]]],[[21,[-1]]],[]],[[-1,-2],2,[],[]],[-1,[[4,[22]]],5],[[-1,6],[[4,[2,7]]],[]],[[22,22],8],[[-1,6],[[4,[2,9]]],[]],[[22,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[21,[-1]],-3],-4,[],[],[[13,[-2],[[12,[-1]]]],14,15,16],[]],[[[17,[22,-1]]],[[21,[-1]]],[]],[[22,-1],4,19],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[[[21,[-1]],18,-2],2,[],[[13,[18],[[12,[-1]]]],14]],[[[21,[-1]],18],18,[]],[-1,20,[]],[-1,20,[]]],"c":[],"p":[[5,"CapabilityOne",4],[1,"tuple"],[5,"OpOne",4],[6,"Result",62],[10,"Deserializer",63],[10,"Serializer",64],[6,"ErrorImpl",64],[1,"bool"],[5,"Error",65],[5,"Formatter",66],[8,"Result",66],[17,"Output"],[10,"Fn",67],[10,"Send",68],[10,"Sync",68],[10,"Copy",68],[5,"CapabilityContext",69],[1,"usize"],[10,"Serializer",70],[5,"TypeId",71],[5,"CapabilityTwo",33],[5,"OpTwo",33]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
